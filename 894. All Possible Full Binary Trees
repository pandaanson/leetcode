# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def allPossibleFBT(self, n: int) -> List[TreeNode]:
        memo = {0: [], 1: [TreeNode(0)]}

        def helper(n):
            if n not in memo:
                ans = []
                for x in range(n):
                    y = n - 1 - x
                    for left in helper(x):
                        for right in helper(y):
                            root = TreeNode(0)
                            root.left = left
                            root.right = right
                            ans.append(root)
                memo[n] = ans
            return memo[n]

        return helper(n)
