WITH RECURSIVE month AS (
    SELECT 1 AS month
    UNION
    SELECT month + 1 AS month FROM month WHERE month < 12
),
month_rides AS (
    SELECT   
        MONTH(r.requested_at) AS month,
        SUM(a.ride_distance) AS ride_distance,
        SUM(a.ride_duration) AS ride_duration
    FROM Rides r JOIN AcceptedRides a ON a.ride_id = r.ride_id
    WHERE YEAR(r.requested_at) = '2020'
    GROUP BY month
),
every_month_rides AS (
    SELECT 
        m.month, 
        IFNULL(mr.ride_distance, 0) AS ride_distance, 
        IFNULL(mr.ride_duration, 0) AS ride_duration
    FROM month m LEFT JOIN month_rides mr ON mr.month = m.month
)
SELECT 
    t1.month AS month,
    ROUND((t1.ride_distance + t2.ride_distance + t3.ride_distance)/3, 2) AS average_ride_distance,
    ROUND((t1.ride_duration + t2.ride_duration + t3.ride_duration)/3, 2) AS average_ride_duration
FROM every_month_rides t1
JOIN every_month_rides t2
JOIN every_month_rides t3 
ON t1.month = t2.month - 1 AND t2.month = t3.month - 1
